@import url("https://fonts.googleapis.com/css2?family=Sora:wght@300;400;500;600;700;800&display=swap");
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
	font-family: "Sora", system-ui, Avenir, Helvetica, Arial, sans-serif;
	line-height: 1.5;
	font-weight: 400;
	color-scheme: light dark;
}

html {
	scroll-behavior: smooth;
}

body {
	margin: 0;
	display: flex;
	place-items: center;
	min-width: 320px;
	min-height: 100vh;
	font-family: "Sora", sans-serif;
	overflow-x: hidden;
	cursor: none; /* Hide default cursor for custom mouse tracking */
}

#root {
	width: 100%;
	margin: 0 auto;
	text-align: left;
}

/* Custom scrollbar */
::-webkit-scrollbar {
	width: 6px;
}

::-webkit-scrollbar-track {
	background: transparent;
}

::-webkit-scrollbar-thumb {
	background: rgba(99, 102, 241, 0.3);
	border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
	background: rgba(99, 102, 241, 0.5);
}

.dark ::-webkit-scrollbar-thumb {
	background: rgba(139, 92, 246, 0.3);
}

.dark ::-webkit-scrollbar-thumb:hover {
	background: rgba(139, 92, 246, 0.5);
}

/* Glass morphism utilities */
.glass {
	backdrop-filter: blur(20px);
	-webkit-backdrop-filter: blur(20px);
	background: rgba(255, 255, 255, 0.1);
	border: 1px solid rgba(255, 255, 255, 0.2);
}

.dark .glass {
	background: rgba(15, 23, 42, 0.3);
	border: 1px solid rgba(148, 163, 184, 0.1);
}

/* Neumorphism utilities */
.neomorphism {
	background: linear-gradient(145deg, #f8fafc, #e2e8f0);
	box-shadow: 20px 20px 40px rgba(148, 163, 184, 0.4),
		-20px -20px 40px rgba(255, 255, 255, 0.8);
}

.dark .neomorphism {
	background: linear-gradient(145deg, #1e293b, #0f172a);
	box-shadow: 20px 20px 40px rgba(0, 0, 0, 0.5),
		-20px -20px 40px rgba(51, 65, 85, 0.3);
}

/* Gradient backgrounds */
.gradient-bg {
	background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
}

.dark .gradient-bg {
	background: linear-gradient(135deg, #4c1d95 0%, #1e1b4b 100%);
}

/* Floating animation */
@keyframes float {
	0%,
	100% {
		transform: translateY(0px) rotate(0deg);
	}
	33% {
		transform: translateY(-10px) rotate(1deg);
	}
	66% {
		transform: translateY(5px) rotate(-1deg);
	}
}

.float {
	animation: float 6s ease-in-out infinite;
}

@keyframes float-delayed {
	0%,
	100% {
		transform: translateY(0px) rotate(0deg);
	}
	33% {
		transform: translateY(-15px) rotate(-1deg);
	}
	66% {
		transform: translateY(8px) rotate(1deg);
	}
}

.float-delayed {
	animation: float-delayed 8s ease-in-out infinite;
}

/* Pulse glow */
@keyframes pulse-glow {
	0%,
	100% {
		box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);
	}
	50% {
		box-shadow: 0 0 40px rgba(99, 102, 241, 0.6);
	}
}

.pulse-glow {
	animation: pulse-glow 3s ease-in-out infinite;
}

/* Gradient text */
.gradient-text {
	background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	background-clip: text;
}

.dark .gradient-text {
	background: linear-gradient(135deg, #a78bfa 0%, #c084fc 100%);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	background-clip: text;
}

/* Selection styles */
::selection {
	background-color: rgba(99, 102, 241, 0.3);
}

.dark ::selection {
	background-color: rgba(139, 92, 246, 0.3);
}

/* Focus styles */
.focus-ring:focus {
	outline: none;
	ring: 2px;
	ring-color: rgb(99 102 241);
	ring-offset: 2px;
}

/* Parallax container */
.parallax-container {
	transform-style: preserve-3d;
	perspective: 1000px;
}

/* Button hover effects */
.btn-hover {
	transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-hover:hover {
	transform: translateY(-2px);
	box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

.dark .btn-hover:hover {
	box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
}

/* Interactive elements should show cursor */
a,
button,
[role="button"],
input,
textarea,
select {
	cursor: pointer !important;
}

input,
textarea {
	cursor: text !important;
}

/* Mouse tracking effects */
.mouse-glow {
	position: relative;
	overflow: hidden;
}

.mouse-glow::before {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: radial-gradient(
		circle 200px at var(--mouse-x, 50%) var(--mouse-y, 50%),
		rgba(99, 102, 241, 0.1),
		transparent 70%
	);
	opacity: 0;
	transition: opacity 0.3s ease;
	pointer-events: none;
}

.mouse-glow:hover::before {
	opacity: 1;
}
